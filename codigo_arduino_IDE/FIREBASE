// ===============================
// Bibliotecas
// ===============================
#include <WiFi.h>
#include <Firebase_ESP_Client.h>
#include <SPI.h>
#include <MFRC522.h>
#include <ESP32Servo.h>

// ===============================
// Wi-Fi
// ===============================
#define WIFI_SSID "FELIPE"
#define WIFI_PASSWORD "12345678"

// ===============================
// Firebase Firestore
// ===============================
#define API_KEY "AIzaSyDAG_nfsNFNk6ZnhTnC9Cci-N6L3Bui4PY"
#define DATABASE_URL "https://trancaeletronica-90835-default-rtdb.firebaseio.com/"
#define FIREBASE_PROJECT_ID "trancaeletronica-90835"
#define USER_EMAIL "staff@adm.com"
#define USER_PASSWORD "321456"

// ===============================
// RFID e Servo
// ===============================
#define SS_PIN 5
#define RST_PIN 22
MFRC522 rfid(SS_PIN, RST_PIN);
Servo meuServo;
int pinoServo = 13;

// ===============================
// Objetos Firebase
// ===============================
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

// ===============================
// Setup
// ===============================
void setup() {
  Serial.begin(115200);
  SPI.begin(18, 19, 23); // SCK, MISO, MOSI
  rfid.PCD_Init();
  meuServo.attach(pinoServo);
  meuServo.write(0); // posição fechada

  // Conectar Wi-Fi
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWi-Fi conectado!");

  // Configurar Firebase
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;
  auth.user.email = USER_EMAIL;
  auth.user.password = USER_PASSWORD;
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

// ===============================
// Loop principal
// ===============================
void loop() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
    delay(50);
    return;
  }

  // Lê UID do cartão
  String uid = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    uid += String(rfid.uid.uidByte[i], HEX);
    if (i < rfid.uid.size - 1) uid += ":";
  }
  uid.toUpperCase();
  Serial.println("UID detectado: " + uid);

  // Data e hora simuladas (ideal usar NTP ou RTC)
  String data = "2025-06-04";
  String horario = "11:30";

  // Documento Firestore (coleção: acessos)
  String documentPath = "acessos/" + uid + "_" + String(millis());

  // Formatar dados corretamente para o Firestore
  FirebaseJson content;
  content.set("fields/uid/stringValue", uid);
  content.set("fields/data/stringValue", data);
  content.set("fields/horario/stringValue", horario);

  // Enviar ao Firestore
  if (Firebase.Firestore.createDocument(&fbdo, FIREBASE_PROJECT_ID, "", documentPath.c_str(), content.raw())) {
    Serial.println("Registro enviado para o Firestore!");
  } else {
    Serial.println("Erro ao enviar para o Firestore:");
    Serial.println(fbdo.errorReason());
  }

  // Acionar o servo
  meuServo.write(180); // abre
  delay(1500);
  meuServo.write(0);   // fecha
  delay(1500);

  rfid.PICC_HaltA();
  rfid.PCD_StopCrypto1();
}
